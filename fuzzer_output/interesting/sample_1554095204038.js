function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,13.37,13.37,13.37];
const v17 = [1337,1337,1337,1337];
const v18 = [13.37];
const v19 = {find:v17,fill:RegExp,length:"number",acos:"number"};
const v20 = {MIN_VALUE:"number",multiline:v19};
let v21 = v17;
const v26 = [5.0,5.0,5.0,5.0,5.0];
const v28 = [1337,1337,1337,1337];
const v29 = [5.0];
const v30 = {find:v28,fill:RegExp,length:"number",acos:"number"};
const v31 = {MIN_VALUE:"number",multiline:13.37};
let v32 = RegExp;
const v37 = RegExp[65537];
delete (13.37)[13.37];
const v39 = [1337,1337,1337,1337];
const v40 = [13.37];
const v41 = {find:v39,fill:RegExp,length:"number",acos:"number"};
const v42 = {MIN_VALUE:"number",multiline:v41};
let v43 = v39;
const v47 = [13.37,13.37,13.37,13.37,13.37];
const v49 = [1337,1337,1337,1337];
const v50 = {find:v49,fill:Map,length:"number",acos:"number"};
const v51 = {MIN_VALUE:"number",multiline:v50};
let v52 = v49;
const v58 = [1337,1337,1337,1337];
const v59 = [-956001.3254401154];
const v60 = {find:v58,fill:arguments,length:"number",acos:"number"};
const v61 = {MIN_VALUE:"number",multiline:v60};
const v63 = gc();
const v65 = -521713708 * v51;
const v66 = new Object("number","number",v61);
const v67 = Object();
}
%NeverOptimizeFunction(main);
main();
