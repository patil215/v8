function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v23 = [1337,1337,RegExp,1337];
const v42 = [13.37,13.37,13.37,13.37,13.37];
const v44 = [1337,1337,1337,1337];
const v45 = [13.37];
const v46 = {find:v44,fill:RegExp,length:"number",acos:"number"};
const v47 = {MIN_VALUE:"number",multiline:v46};
let v48 = v44;
const v53 = [13.37,13.37,13.37,13.37,13.37];
const v54 = RegExp[65537];
v53.cbrt = 13.37;
delete (13.37)[13.37];
const v56 = "number"["number"];
const v57 = [1337,1337,1337,1337];
const v58 = [13.37];
const v59 = {find:v57,fill:RegExp,length:"number",acos:"number"};
const v60 = {MIN_VALUE:"number",multiline:v59};
let v61 = v57;
const v65 = [13.37,13.37,13.37,13.37,13.37];
const v67 = [1337,1337,1337,1337];
const v68 = [13.37];
const v69 = {find:v67,fill:RegExp,length:"number",acos:"number"};
const v70 = {MIN_VALUE:"number",multiline:v69};
let v71 = v67;
const v76 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v78 = [1337,1337,1337,1337];
const v79 = [-956001.3254401154];
const v80 = {find:v78,fill:arguments,length:"number",acos:"number"};
const v81 = {MIN_VALUE:"number",multiline:v80};
let v82 = v78;
const v84 = Object();
const v86 = -521713708 * v70;
const v87 = Object("number","number",v81);
const v88 = Object();
const v89 = v70.isFrozen;
let v92 = 0;
do {
    v81.length = v92;
    const v93 = v92 + 1;
    v92 = v93;
} while (v92 < 10);
}
%NeverOptimizeFunction(main);
main();
