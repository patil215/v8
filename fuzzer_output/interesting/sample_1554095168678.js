function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v19 = [13.37,13.37,13.37,13.37,13.37];
const v21 = [1337,1337,1337,1337];
const v23 = Object();
const v24 = [13.37];
const v25 = {localeCompare:v21,fill:RegExp,length:"number",acos:"number"};
const v26 = {parseFloat:"number",multiline:v25};
let v27 = v21;
const v32 = [13.37,13.37,13.37,13.37,13.37];
const v34 = [1337,1337,1337,1337];
const v35 = [13.37];
const v36 = {find:v34,fill:RegExp,length:"number",acos:"number"};
const v37 = {MIN_VALUE:"number",multiline:v36};
const v42 = [13.37,13.37,13.37,13.37,13.37];
const v58 = [13.37,13.37,13.37,13.37,13.37];
const v60 = [1337,1337,1337,1337];
const v61 = [13.37];
const v62 = {find:v60,fill:RegExp,length:"number",acos:"number"};
const v63 = {MIN_VALUE:"number",multiline:v62};
let v64 = v60;
v42[138075038] = RegExp;
RegExp[-521713708] = v25;
const v70 = [1337,1337,1337,1337];
const v71 = [13.37];
const v72 = {find:v70,fill:RegExp,length:"number",acos:"number"};
const v73 = {MIN_VALUE:"number",multiline:v72};
let v74 = v70;
const v79 = [13.37,13.37,13.37,13.37,13.37];
const v80 = RegExp[65537];
const v85 = [13.37,13.37,13.37,13.37,13.37];
const v87 = [1337,1337,1337,1337];
const v88 = [13.37];
const v89 = {find:v87,fill:RegExp,length:"number",acos:"number"};
const v90 = {MIN_VALUE:"number",multiline:v89};
let v91 = v87;
const v96 = [13.37,13.37,13.37,13.37,13.37];
const v98 = [1337,1337,1337,1337];
const v99 = {find:v98,fill:RegExp,length:"number",acos:"number"};
const v100 = {MIN_VALUE:"number",multiline:v99};
let v101 = v98;
const v106 = [13.37,13.37,13.37,13.37,13.37];
const v108 = [1337,1337,1337,1337];
const v109 = [13.37];
const v110 = {find:v108,fill:RegExp,length:"number",acos:"number"};
let v111 = v108;
const v116 = [13.37,13.37,13.37,13.37,13.37];
const v117 = RegExp[65537];
v116.cbrt = 13.37;
delete (13.37)[13.37];
const v119 = "number"["number"];
const v120 = [1337,1337,1337,1337];
const v121 = [13.37];
const v122 = {find:v120,fill:RegExp,length:"number",acos:"number"};
const v123 = {MIN_VALUE:"number",multiline:v122};
let v124 = v120;
const v129 = [13.37,13.37,13.37,13.37,13.37];
const v131 = [1337,1337,1337,1337];
const v132 = [13.37];
const v133 = {find:v131,fill:Map,length:"number",acos:"number"};
const v134 = {MIN_VALUE:"number",multiline:v133};
let v135 = v131;
const v143 = [13.37,13.37,13.37,13.37,13.37];
const v145 = [1337,1337,1337,1337];
const v147 = Object();
const v148 = [13.37];
const v149 = {find:v145,fill:RegExp,length:1337,acos:"number"};
const v150 = {MIN_VALUE:"number",multiline:v149};
let v151 = v145;
const v156 = [13.37,13.37,13.37,13.37,13.37];
const v158 = [1337,1337,1337,1337];
const v159 = [13.37];
const v160 = {find:v158,fill:RegExp,length:"number",acos:"number"};
const v161 = {MIN_VALUE:"number",multiline:v160};
const v166 = [13.37,13.37,13.37,13.37,13.37];
const v168 = [1337,1337,1337,1337];
const v169 = [13.37];
const v170 = {find:v168,fill:RegExp,length:"number",acos:"number"};
const v171 = {MIN_VALUE:"number",multiline:-521713708};
const v176 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v178 = [1337,1337,1337,1337];
const v179 = [-956001.3254401154];
const v181 = {find:v178,fill:arguments,length:"number",acos:"number"};
const v182 = {MIN_VALUE:Map,multiline:v181};
const v186 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v188 = [1337,1337,1337,1337];
const v189 = [-956001.3254401154];
const v190 = {find:v188,fill:arguments,length:"number",acos:"number"};
const v191 = {MIN_VALUE:"number",multiline:v190};
let v192 = v188;
const v194 = gc();
const v196 = -521713708 * v134;
const v197 = new Object("number","number",v191);
const v198 = Object();
v79.cbrt = 13.37;
delete (13.37)[13.37];
const v200 = "number"["number"];
const v201 = [1337,1337,1337,1337];
const v202 = [1337];
const v203 = {find:v201,fill:RegExp,length:"number",acos:"number"};
const v204 = {MIN_VALUE:"number",multiline:v203};
}
%NeverOptimizeFunction(main);
main();
