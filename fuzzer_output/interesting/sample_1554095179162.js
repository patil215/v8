function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,13.37,13.37,13.37];
const v17 = [1337,1337,1337,1337];
const v18 = [13.37];
const v19 = {find:v17,fill:RegExp,length:"number",acos:"number"};
const v24 = [13.37,13.37,13.37,13.37,13.37];
const v26 = [1337,1337,1337,1337];
const v27 = [13.37];
const v28 = {find:v26,fill:RegExp,length:"number",acos:"number"};
const v29 = {MIN_VALUE:"number",multiline:v28};
let v30 = v26;
const v35 = [13.37,13.37,13.37,13.37,13.37];
const v37 = [1337,1337,1337,1337];
const v38 = [13.37];
const v39 = {find:v37,fill:RegExp,length:"number",acos:"number"};
const v40 = {MIN_VALUE:"number",multiline:v39};
let v41 = v37;
const v47 = [13.37,v38,13.37,13.37,13.37];
const v49 = [1337,1337,1337,1337];
const v50 = [13.37];
const v51 = {find:v49,fill:RegExp,length:"number",acos:"number"};
const v52 = {MIN_VALUE:13.37,multiline:v51};
let v53 = v49;
const v58 = [13.37,13.37,13.37,13.37,13.37];
const v61 = [1337,1337,1337,1337];
const v62 = [13.37];
const v63 = {find:v61,fill:RegExp,length:"number",acos:"number"};
const v64 = {MIN_VALUE:"number",multiline:v63};
const v66 = [1337,1337,1337,1337];
let v67 = v66;
let v69 = v61;
const v74 = [13.37,13.37,13.37,13.37,13.37];
const v75 = RegExp[65537];
v74.cbrt = 13.37;
delete (13.37)[13.37];
const v77 = "number"["number"];
const v78 = [1337,1337,1337,1337];
const v79 = [13.37];
const v80 = {find:v78,fill:RegExp,length:"number",acos:"number"};
const v81 = {MIN_VALUE:"number",multiline:v80};
let v82 = v78;
const v87 = [13.37,13.37,13.37,13.37,13.37];
const v89 = [1337,1337,1337,1337];
const v90 = [13.37];
const v91 = {find:v89,fill:Map,length:"number",acos:"number"};
let v92 = v89;
const v97 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v99 = [1337,1337,1337,1337];
const v100 = [-956001.3254401154];
const v101 = {find:v99,fill:arguments,length:"number",acos:"number"};
const v102 = {MIN_VALUE:"number",multiline:v101};
let v103 = v99;
const v107 = gc();
const v109 = new Object("number","number",v102);
const v110 = {MIN_VALUE:"number",multiline:v19};
let v111 = v17;
const v116 = [13.37,13.37,RegExp,13.37,13.37];
const v121 = [1337,1337,1337,1337];
const v122 = [13.37];
const v123 = {parseInt:v121,fill:RegExp,length:"fromEntries",acos:"fromEntries"};
const v124 = {MIN_VALUE:"fromEntries",multiline:v123};
let v125 = v121;
const v130 = [13.37,13.37,13.37,13.37,13.37];
const v132 = [1337,1337,1337,1337];
const v133 = [13.37];
const v134 = {find:v132,fill:RegExp,length:"number",acos:"number"};
const v135 = {MIN_VALUE:"number",multiline:v134};
let v136 = v132;
const v141 = [13.37,13.37,13.37,13.37,13.37];
const v143 = v130 && v110;
RegExp[v132] = v111;
const v144 = [1337,1337,1337,1337];
const v145 = [13.37];
const v146 = {find:v144,fill:RegExp,length:"number",acos:"number"};
const v147 = {MIN_VALUE:"number",multiline:v146};
let v149 = v144;
const v154 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v156 = [1337,1337,1337,1337];
const v157 = [-956001.3254401154];
const v158 = {find:v156,fill:arguments,length:"number",acos:"number"};
const v159 = {MIN_VALUE:v136,multiline:v158};
let v160 = 1337;
const v162 = Object();
const v164 = Array();
}
%NeverOptimizeFunction(main);
main();
