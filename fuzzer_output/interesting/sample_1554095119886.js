function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,13.37,13.37,13.37];
const v16 = RegExp[65537];
v15.cbrt = 13.37;
delete (13.37)[13.37];
const v18 = "number"["number"];
const v19 = [1337,1337,1337,1337];
const v20 = [13.37];
const v21 = {find:v19,fill:RegExp,length:"number",acos:"number"};
const v22 = {MIN_VALUE:"number",multiline:v21};
let v23 = v19;
const v27 = [13.37,13.37,13.37,13.37,13.37];
const v29 = [1337,1337,1337,1337];
const v30 = [13.37];
const v31 = {find:v29,fill:RegExp,length:"number",acos:"number"};
const v32 = {MIN_VALUE:"number",multiline:v31};
let v33 = v29;
const v38 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v40 = [1337,1337,1337,1337];
const v41 = [-956001.3254401154];
const v42 = {find:v40,fill:arguments,length:"number",acos:"number"};
const v43 = {MIN_VALUE:"number",multiline:v42};
let v44 = v40;
const v46 = Object();
const v48 = -521713708 * v32;
const v49 = Object("number","number",v43);
const v50 = Object();
const v51 = v32.isFrozen;
let v54 = 0;
do {
    v43.length = v54;
    const v55 = v54 + 1;
    v54 = v55;
} while (v54 < 10);
}
%NeverOptimizeFunction(main);
main();
