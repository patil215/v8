function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v10 = [13.37,13.37,13.37,13.37,13.37];
const v12 = [1337,1337,1337,1337];
const v13 = [13.37];
const v14 = {find:v12,fill:RegExp,length:"number",acos:"number"};
const v19 = [13.37,13.37,13.37,13.37,13.37];
const v21 = [1337,1337,1337,1337];
const v22 = [13.37];
const v23 = {find:v21,fill:RegExp,length:"number",acos:"number"};
const v25 = {MIN_VALUE:"number",multiline:v23};
let v26 = v21;
const v31 = [13.37,13.37,13.37,13.37,13.37];
const v33 = [1337,1337,1337,1337];
const v34 = [13.37];
const v35 = {find:v33,fill:RegExp,length:"number",acos:"number"};
const v36 = {MIN_VALUE:"number",multiline:v35};
let v37 = v33;
delete v19.deleteProperty;
const v42 = [13.37,v34,13.37,13.37,13.37];
const v44 = [1337,1337,1337,1337];
const v45 = [13.37];
const v46 = {find:v44,fill:RegExp,length:"number",acos:"number"};
const v47 = {MIN_VALUE:13.37,multiline:v46};
let v48 = v44;
const v53 = [13.37,13.37,13.37,13.37,13.37];
const v55 = [1337,1337,1337,1337];
const v56 = [13.37];
const v57 = {find:v55,fill:RegExp,length:"number",acos:"number"};
const v58 = {MIN_VALUE:"number",multiline:v57};
let v60 = v55;
const v65 = [13.37,13.37,13.37,13.37,13.37];
const v66 = RegExp[65537];
v65.cbrt = 13.37;
delete (13.37)[13.37];
RegExp[3159345981] = v22;
const v68 = {POSITIVE_INFINITY:v46,trimLeft:"number",split:"number",EPSILON:-521713708,log10:v58,toExponential:RegExp,toUpperCase:13.37};
const v69 = "number"["number"];
const v70 = [1337,1337,1337,1337];
const v71 = [13.37];
const v72 = {find:v70,fill:RegExp,length:"number",acos:"number"};
const v73 = {MIN_VALUE:"number",multiline:v72};
let v74 = v70;
const v79 = [13.37,13.37,13.37,13.37,13.37];
const v81 = [1337,1337,1337,1337];
const v82 = [13.37];
const v83 = {find:v81,fill:Map,length:"number",acos:"number"};
const v84 = {MIN_VALUE:"number",multiline:v83};
let v85 = v81;
const v95 = [1337,1337,1337,1337];
const v96 = [13.37];
const v97 = {find:v95,fill:RegExp,length:"number",acos:"number"};
const v98 = {MIN_VALUE:"number",multiline:v97};
let v99 = v95;
const v104 = [13.37,13.37,13.37,13.37,13.37];
const v105 = RegExp[65537];
v104.cbrt = 13.37;
delete (13.37)[13.37];
const v107 = "number"["number"];
const v108 = [1337,1337,1337,1337];
const v109 = [1337];
const v110 = {find:v108,fill:RegExp,length:"number",acos:"number"};
const v111 = {MIN_VALUE:"number",multiline:v110};
const v126 = [13.37,13.37,13.37,13.37,13.37];
const v128 = [1337,1337,1337,1337];
const v129 = [13.37];
const v130 = {find:v128,fill:RegExp,length:"number",acos:"number"};
const v131 = {MIN_VALUE:"number",multiline:v130};
let v132 = v128;
const v137 = [13.37,13.37,13.37,13.37,13.37];
const v139 = [1337,1337,1337,1337];
const v140 = [13.37];
const v141 = {find:v139,fill:RegExp,length:"number",acos:"number"};
const v142 = {MIN_VALUE:"number",multiline:v141};
let v143 = v139;
const v148 = [13.37,13.37,13.37,13.37,13.37];
const v149 = RegExp[65537];
v148.cbrt = 13.37;
delete (13.37)[13.37];
const v151 = "number"["number"];
const v152 = [1337,1337,1337,1337];
const v153 = [13.37];
const v154 = {find:v152,fill:RegExp,length:"number",acos:"number"};
const v155 = {MIN_VALUE:"number",multiline:v154};
let v156 = v152;
const v161 = [13.37,13.37,13.37,13.37,13.37];
const v163 = [1337,1337,1337,1337];
const v164 = [13.37];
const v165 = {find:v163,fill:Map,length:"number",acos:"number"};
const v166 = {MIN_VALUE:"number",multiline:v165};
let v167 = v163;
const v172 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v174 = [1337,1337,1337,1337];
const v175 = [-956001.3254401154];
const v176 = {find:v174,fill:arguments,length:"number",acos:"number"};
const v177 = {MIN_VALUE:"number",multiline:v176};
let v178 = v174;
const v180 = gc();
const v182 = -521713708 * v166;
const v183 = Object("number","number",v177);
const v185 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v187 = [1337,1337,1337,1337];
const v188 = [-956001.3254401154];
const v189 = {find:v187,fill:arguments,length:"number",acos:"number"};
const v190 = {MIN_VALUE:"number",multiline:v189};
let v191 = v187;
const v194 = gc();
const v196 = -521713708 * v84;
const v197 = Object("number","number",v190);
const v198 = Object();
const v199 = [1337,1337,1337,1337];
const v200 = [13.37];
const v201 = {find:v199,fill:RegExp,length:"number",acos:"number"};
const v202 = {MIN_VALUE:"number",multiline:v201};
let v203 = v199;
const v207 = [1337,1337,1337,1337];
const v208 = {find:v207,fill:Promise,length:"number",acos:"number"};
const v209 = v208.__proto__;
}
%NeverOptimizeFunction(main);
main();
