function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,RegExp,13.37,13.37];
const v20 = [1337,1337,1337,1337];
const v21 = [13.37];
const v22 = {parseInt:v20,fill:RegExp,length:"fromEntries",acos:"fromEntries"};
const v24 = [1337,1337,1337,1337];
let v25 = v24;
const v26 = {MIN_VALUE:"fromEntries",multiline:v22};
let v27 = v20;
const v33 = [1337,1337,1337,1337];
const v34 = {find:v33,fill:Map,length:"number",acos:"number"};
const v35 = {startsWith:"number",multiline:v34};
const v37 = -521713708 * v35;
const v40 = [13.37,13.37,13.37,13.37,13.37];
const v42 = [1337,1337,1337,1337];
const v43 = [13.37];
const v44 = {find:v42,fill:RegExp,length:"number",acos:"number"};
const v45 = {MIN_VALUE:"number",multiline:v44};
let v46 = v42;
const v51 = [13.37,13.37,13.37,13.37,13.37];
const v53 = [1337,1337,1337,1337];
const v54 = [13.37];
const v55 = {find:v53,fill:RegExp,length:"number",acos:"number"};
const v56 = {MIN_VALUE:"number",multiline:v55};
let v58 = v53;
const v63 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v65 = [1337,1337,1337,1337];
const v66 = [-956001.3254401154];
const v67 = {find:v65,fill:arguments,length:"number",acos:"number"};
const v68 = {MIN_VALUE:v46,multiline:v67};
let v69 = 1337;
const v71 = Object();
const v73 = Array();
}
%NeverOptimizeFunction(main);
main();
