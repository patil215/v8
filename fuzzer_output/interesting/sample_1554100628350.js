function main() {
const v4 = [13.37,13.37,13.37,13.37];
const v6 = [1337];
const v7 = [1337];
const v8 = {};
const v9 = {atan:v7,lastIndexOf:1337,global:"function",reduceRight:v4,call:13.37,find:13.37,parseFloat:Map,toLocaleString:Map};
let v10 = Map;
const v15 = [13.37];
const v17 = [1337,1337];
const v18 = [v15,"*rBqVy//Sg",1337,"*rBqVy//Sg"];
const v19 = {log2:v18,multiline:1337};
const v20 = {hasOwnProperty:v17};
let v21 = v18;
const v26 = [13.37,13.37,13.37,13.37];
const v28 = [1337];
const v29 = [v28];
const v30 = {max:Function,setPrototypeOf:10};
const v31 = {propertyIsEnumerable:v28};
let v32 = "undefined";
const v37 = [13.37,13.37,13.37,13.37];
const v39 = [1337];
const v40 = [v39];
const v41 = {max:Function,setPrototypeOf:10};
const v43 = {exec:v39};
let v44 = "undefined";
const v47 = [1337];
const v48 = {exec:v47};
const v50 = {exec:10};
for (let v54 = 0; v54 < 10; v54++) {
    v50[1969818807] = 0;
}
let v57 = 0;
const v58 = v48 > v48;
let v61 = 0;
const v67 = [13.37,13.37,13.37,13.37];
const v69 = [1337];
const v70 = [v69];
const v71 = {max:Function,setPrototypeOf:10};
const v72 = {exec:v69};
let v73 = "undefined";
const v78 = [13.37,13.37,13.37,13.37];
const v80 = [1337];
const v81 = [v80];
const v82 = {max:Function,setPrototypeOf:10};
const v83 = {exec:v80};
let v84 = "undefined";
function v86(v87,v88,v89) {
}
const v93 = [13.37,13.37,13.37,13.37];
const v95 = [1337];
const v96 = [v95];
const v97 = {max:Function,setPrototypeOf:10};
const v98 = {exec:v95};
const v103 = [13.37,13.37,13.37,13.37];
const v105 = [1337];
const v106 = [v105];
const v107 = {max:Function,setPrototypeOf:10};
const v108 = {exec:v105};
let v109 = "undefined";
const v114 = [13.37,v78,13.37,13.37];
const v120 = [13.37,13.37,13.37,13.37];
const v122 = [1337];
const v123 = [v122];
const v124 = {max:Function,setPrototypeOf:10};
const v125 = {exec:v122};
let v126 = "undefined";
const v131 = [13.37,13.37,13.37,13.37];
const v133 = [v120];
const v134 = [v133];
const v135 = {max:Function,setPrototypeOf:10};
const v136 = {exec:v133};
let v137 = "undefined";
const v141 = {max:Function,setPrototypeOf:10};
const v142 = v141 in v141;
const v148 = "undefined" != 1337;
const v158 = Function && 13.37;
let v161 = 0;
const v162 = v161 + 1;
const v163 = [13.37,13.37,13.37,13.37];
const v165 = [1337];
const v166 = [v165];
const v167 = {max:Function,setPrototypeOf:10};
const v168 = {exec:v165};
let v169 = "undefined";
let v172 = 0;
let v173 = 13.37;
const v180 = [13.37,13.37,13.37,13.37];
const v182 = [1337];
const v183 = [v182];
const v184 = {max:Function,setPrototypeOf:10};
const v185 = {exec:v182};
let v186 = "undefined";
const v191 = Function && 13.37;
let v194 = 0;
const v195 = v194 + 1;
const v196 = [13.37,13.37,13.37,13.37];
const v198 = [1337];
const v202 = [1337];
const v203 = {exec:v202};
let v205 = "undefined";
v205.getOwnPropertyDescriptors = v203;
const v209 = [Function];
const v216 = [v198];
const v217 = {max:Function,setPrototypeOf:10};
const v218 = {exec:v198};
let v219 = "undefined";
let v221 = 13.37;
const v223 = [13.37,13.37,13.37,13.37];
const v224 = [13.37];
const v225 = [v224];
let v226 = "undefined";
const v228 = {pow:v224,catch:"undefined",b:v225,flat:v196};
const v229 = Object();
const v230 = [13.37,13.37,13.37,13.37];
const v236 = [13.37,13.37,13.37,13.37];
const v238 = [1337];
const v239 = [v238];
const v240 = {max:Function,setPrototypeOf:10};
const v241 = {exec:v238};
let v242 = "undefined";
const v246 = [13.37,13.37,13.37,13.37];
const v248 = [13.37];
const v249 = [v248];
const v250 = {max:Function,setPrototypeOf:1337};
let v251 = "undefined";
const v253 = Object();
const v254 = [13.37];
const v255 = [v254];
const v256 = {max:Function,setPrototypeOf:1337};
let v257 = "undefined";
const v262 = [13.37,13.37,13.37,13.37];
const v264 = [1337];
const v265 = [v264];
const v266 = {max:Function,setPrototypeOf:10};
const v267 = {max:v264};
let v268 = "undefined";
let v274 = 0;
while (v274 < 3) {
    v274 = 10;
    function v275(v276,v277,v278) {
        return 3;
    }
}
for (const v291 in Function) {
}
}
%NeverOptimizeFunction(main);
main();
