function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337,1337];
const v7 = [13.37,13.37];
const v8 = {replace:1337,setFloat64:v6,hasInstance:v6,charAt:v7,max:Number,reverse:v7,getFloat64:1337,map:13.37};
const v9 = {setInt8:1337,cos:v4};
let v10 = "boolean";
const v15 = [13.37,13.37,13.37,13.37];
const v17 = [1337,1337,1337];
const v18 = [Atomics,"function",v17,13.37];
const v19 = {toLowerCase:-65535,getPrototypeOf:13.37,flags:-65535,leftContext:Atomics,setUint8:"function"};
const v20 = {getPrototypeOf:v18,max:v19,flatMap:v19,asyncIterator:v15,leftContext:v18,pow:v17,input:v19,search:v19,toLowerCase:v18};
let v21 = v15;
const v26 = [13.37];
const v28 = [1337,1337,1337];
const v29 = [v28,13.37,v26,Set];
const v30 = {getUint8:v29,create:16,getPrototypeOf:"number",getOwnPropertyDescriptor:16,setInt16:v26,toStringTag:v28,filter:13.37};
const v31 = {ceil:1337,log1p:1337,c:v29};
let v32 = v30;
const v37 = [13.37];
const v39 = [1337,1337,1337];
const v40 = [v39,13.37,"number",Set];
const v41 = {getUint8:v40,create:16,getPrototypeOf:"number",getOwnPropertyDescriptor:16,setInt16:v37,toStringTag:v39,filter:13.37};
const v42 = {ceil:1337,log1p:1337,c:v40};
let v43 = v41;
const v47 = [13.37,13.37];
let v48 = v47;
v48 = Math;
let v51 = 0;
const v52 = v51 + 1;
v51 = v52;
function v53(v54,v55,v56,v57) {
    const v58 = v55 == v48;
}
const v65 = [1337];
const v69 = [13.37,13.37];
const v71 = [1337,1337,1337];
const v72 = [13.37,v69,13.37,v71];
const v73 = {resolve:v72,getPrototypeOf:1337};
let v74 = v69;
const v79 = [13.37];
const v81 = [1337,1337,1337];
const v82 = [v81,13.37,"number",Set];
const v87 = [-256,-256,-256];
const v88 = [v87,13.37,"number",Set];
const v89 = {ceil:-256,log1p:-256,c:v88};
const v93 = [1337,1337];
let v94 = v93;
const v96 = [13.37,13.37,13.37,13.37];
function v97(v98,v99,v100,v101) {
    const v105 = [1337];
    const v106 = {max:Proxy,setPrototypeOf:10};
    const v109 = [13.37,13.37,13.37,13.37];
    const v112 = Function && 13.37;
    v106.__proto__ = v96;
    const v115 = [13.37,13.37,13.37,13.37];
    const v117 = [1337];
    const v120 = [13.37];
    const v121 = v96[Function];
    const v122 = [v120];
    const v123 = {pow:v120,catch:"undefined",b:v122,flat:v115};
    let v125 = "undefined";
    for (const v126 in v125) {
    }
    v112.toStringTag = Function;
    const v129 = new Float64Array(47568);
    let v133 = 9007199254740991;
    let v134 = v133;
    v133 = v134;
    let v138 = 0;
    const v139 = v138 + 1;
    v138 = v139;
    const v143 = [1337];
    const v144 = {exec:v143};
    let v147 = "undefined";
    let v150 = 0;
    const v151 = v150 + 1;
    v150 = v151;
    const v152 = v150.__proto__;
    v147.getOwnPropertyDescriptors = v144;
}
const v158 = [1337];
for (let v162 = 0; v162 < 100; v162++) {
    const v163 = v97(10,Reflect,1337,v158,Function);
}
const v165 = {set:v97,get:v97};
const v167 = Object.defineProperty(v89,7,v165);
for (let v170 = 0; v170 < 100; v170++) {
    const v171 = v53(10,Function,1337,v65,Function);
}
const v175 = [13.37,13.37,Map,13.37];
const v177 = [v15];
const v178 = [1337];
const v179 = {};
const v180 = {atan:v178,lastIndexOf:1337,global:"function",reduceRight:v175,call:13.37,find:16,parseFloat:Map,toLocaleString:Map};
const v185 = [13.37,13.37,13.37,13.37];
const v187 = [1337];
const v188 = {max:Function,setPrototypeOf:10};
let v189 = "undefined";
const v193 = [13.37,Function,Function,"undefined"];
const v195 = [13.37,13.37,13.37,13.37];
const v197 = [1337];
const v198 = [v197];
const v199 = {max:Function,setPrototypeOf:10};
const v200 = {exec:v197};
let v201 = "undefined";
const v206 = [13.37,13.37,13.37,13.37];
let v210 = "undefined";
const v211 = [1337];
const v212 = [13.37];
const v213 = {max:Function,setPrototypeOf:10};
const v218 = [13.37,13.37,13.37,13.37];
const v220 = [1337];
const v221 = [v220];
const v222 = {max:Function,setPrototypeOf:10};
const v223 = {exec:v220};
let v224 = "undefined";
const v229 = [13.37,13.37,13.37,13.37];
const v231 = [1337];
const v232 = [v231];
const v233 = {max:Function,setPrototypeOf:10};
let v234 = "undefined";
const v239 = [13.37,13.37,13.37,13.37];
function v240(v241,v242,v243,v244) {
    v244[v239] = v244;
    return v243;
}
for (const v245 in Function) {
}
const v249 = [1337];
let v250 = "undefined";
const v255 = [13.37,13.37,13.37,13.37];
const v257 = [1337];
const v258 = [v257];
const v259 = {max:Function,setPrototypeOf:10};
const v260 = {exec:v257};
let v262 = "undefined";
const v268 = [1337];
const v269 = {exec:v268};
const v279 = [13.37,13.37,13.37,13.37];
const v281 = [1337];
const v282 = [v281];
const v283 = {max:Function,setPrototypeOf:10};
const v287 = [13.37,13.37,13.37,13.37];
const v289 = [1337];
const v290 = [v289];
const v291 = {exec:v289};
let v292 = "undefined";
const v297 = [13.37,13.37,13.37,13.37];
const v303 = [13.37,13.37,13.37,13.37];
const v305 = [1337];
const v306 = [v305];
const v307 = {max:Function,setPrototypeOf:10};
const v308 = {exec:v305};
let v309 = "undefined";
const v314 = [13.37,13.37,13.37,13.37];
const v316 = [1337];
const v317 = [v316];
let v319 = "undefined";
const v320 = {max:Function,setPrototypeOf:10};
const v321 = {exec:v316};
let v322 = "undefined";
const v327 = Function && 13.37;
let v330 = 0;
const v331 = [13.37,13.37,13.37,13.37];
const v333 = [1337];
let v334 = v282;
for (let v339 = 0; v339 < 100; v339++) {
}
v334 = "undefined";
v334 = 10;
const v340 = {max:Function,setPrototypeOf:10};
const v341 = {exec:v333};
let v342 = "undefined";
let v344 = 13.37;
const v351 = [13.37,13.37,13.37,13.37];
const v353 = [1337];
const v354 = [v353];
const v355 = {max:Function,setPrototypeOf:10};
const v356 = {exec:v353};
let v357 = "undefined";
const v362 = Function && 13.37;
let v365 = 0;
const v366 = v365 + 1;
const v367 = [13.37,13.37,13.37,13.37];
const v369 = [1337];
const v379 = [v369];
const v380 = {max:Function,setPrototypeOf:10};
let v381 = "undefined";
let v383 = 13.37;
const v386 = [13.37,13.37,13.37,13.37];
const v387 = [13.37];
const v388 = [v387];
let v389 = "undefined";
const v391 = {pow:v387,catch:"undefined",b:v388,flat:v367};
const v392 = Object();
const v397 = [13.37,13.37,13.37,13.37];
const v399 = [1337];
const v400 = {exec:v399};
let v401 = "undefined";
const v405 = [13.37,13.37,13.37,13.37];
const v407 = [13.37];
const v408 = [v407];
const v409 = {max:Function,setPrototypeOf:1337};
let v410 = "undefined";
const v412 = Function();
const v413 = [13.37];
const v414 = [v413];
const v415 = {max:Function,setPrototypeOf:1337};
let v416 = "undefined";
const v422 = [1337];
const v423 = [v422];
const v424 = {max:Function,setPrototypeOf:10};
const v425 = {exec:v422};
let v426 = "undefined";
let v433 = 0;
while (10 < 3) {
    v433 = 10;
    const v434 = v433 + 1;
    const v435 = Function.__lookupGetter__;
    function v436(v437,v438,v439) {
        const v440 = {acosh:v435,findIndex:v437,EPSILON:v422,sin:v437,keyFor:v439,reverse:v435};
        return v434;
    }
}
for (const v441 in v426) {
}
const v442 = [13.37,13.37,13.37,13.37];
const v444 = [1337];
const v445 = {max:Function,setPrototypeOf:10};
const v446 = {exec:v444};
let v447 = v416;
let v450 = 13.37;
const v453 = [13.37,13.37,13.37,13.37];
const v455 = [13.37];
const v456 = [v455];
const v457 = {max:Function,setPrototypeOf:1337};
let v458 = "undefined";
const v460 = Object();
const v462 = [1337];
const v463 = [v462];
const v464 = {max:Function,setPrototypeOf:10};
let v465 = "undefined";
const v470 = [13.37,13.37,13.37,13.37];
const v472 = v470.sin;
const v473 = [1337];
const v474 = [v473];
const v475 = {max:Function,setPrototypeOf:10};
let v476 = 10;
let v482 = v269;
const v484 = {exec:10};
let v485 = v212;
const v490 = [13.37,13.37,13.37,"undefined"];
const v492 = [v485];
Function[-3085604502] = 10;
const v493 = [13.37];
const v494 = {max:Function,setPrototypeOf:10};
let v501 = "undefined";
const v506 = Function(v501,13.37);
let v513 = Map;
const v525 = new Float64Array(46647);
const v530 = [1337];
let v534 = v180;
v534 = 10;
let v536 = "undefined";
let v539 = 0;
for (let v540 = 0; v540 < 5; v540 = v540 + 728813560) {
    const v541 = gc(v540,v540,v540,v540,Function);
}
}
%NeverOptimizeFunction(main);
main();
