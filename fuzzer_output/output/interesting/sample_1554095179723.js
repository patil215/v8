function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,13.37,13.37,13.37];
const v17 = [1337,1337,1337,1337];
const v18 = [13.37];
const v19 = {find:v17,fill:RegExp,length:"number",acos:"number"};
const v20 = {MIN_VALUE:"number",multiline:v19};
let v21 = v17;
const v27 = [13.37,13.37,13.37,13.37,13.37];
const v29 = [1337,1337,1337,1337];
const v30 = [13.37];
const v31 = {find:v29,fill:RegExp,length:"number",acos:"number"};
const v32 = {MIN_VALUE:"number",multiline:v31};
let v33 = v29;
const v38 = [13.37,13.37,13.37,13.37,13.37];
const v40 = [1337,1337,1337,1337];
const v41 = [13.37];
const v42 = {find:v40,fill:RegExp,length:"number",acos:"number"};
const v43 = {MIN_VALUE:"number",multiline:v42};
let v45 = v40;
const v50 = [13.37,13.37,13.37,13.37,13.37];
const v51 = RegExp[65537];
v50.cbrt = 13.37;
delete (13.37)[13.37];
const v53 = "number"["number"];
const v54 = [1337,1337,1337,1337];
const v55 = [13.37];
const v56 = {find:v54,fill:RegExp,length:"number",acos:"number"};
const v57 = {MIN_VALUE:"number",multiline:v56};
let v58 = v54;
const v64 = [13.37,13.37,13.37,13.37,13.37];
const v66 = [1337,1337,1337,1337];
const v67 = [13.37];
const v68 = {find:v66,fill:Map,length:"number",acos:"number"};
const v69 = {MIN_VALUE:"number",multiline:v68};
let v70 = v66;
const v75 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v77 = [1337,1337,1337,1337];
const v79 = [-956001.3254401154];
const v80 = {find:v77,fill:arguments,length:"number",acos:"number"};
const v81 = {MIN_VALUE:"number",multiline:v80};
let v82 = v77;
const v86 = [1337,1337,1337,1337];
const v87 = {find:v86,fill:RegExp,length:"number",acos:"number"};
const v88 = v87.__proto__;
const v91 = gc();
const v93 = -521713708 * v69;
const v94 = new Object("number","number",v81);
const v95 = Object();
}
%NeverOptimizeFunction(main);
main();
