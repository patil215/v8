function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [1337,1337,1337,1337];
const v20 = [13.37,13.37,13.37,13.37,13.37];
const v22 = [1337,1337,1337,1337];
const v23 = [13.37];
const v24 = {find:v22,fill:RegExp,length:"number",acos:"number"};
const v26 = {MIN_VALUE:"number",multiline:v24};
let v27 = v22;
const v32 = [13.37,13.37,13.37,13.37,13.37];
const v34 = [1337,1337,1337,1337];
const v35 = [13.37];
const v36 = {find:v34,fill:RegExp,length:"number",acos:"number"};
const v37 = {MIN_VALUE:"number",multiline:v36};
let v38 = v34;
delete v20.deleteProperty;
const v43 = [13.37,v35,13.37,13.37,13.37];
const v45 = [1337,1337,1337,1337];
const v46 = [13.37];
const v47 = {find:v45,fill:RegExp,length:"number",acos:"number"};
const v48 = {MIN_VALUE:13.37,multiline:v47};
let v49 = v45;
const v54 = [13.37,13.37,13.37,13.37,13.37];
const v56 = [1337,1337,1337,1337];
const v57 = [13.37];
const v58 = {find:v56,fill:RegExp,length:"number",acos:"number"};
const v59 = {MIN_VALUE:"number",multiline:v58};
let v61 = v56;
const v66 = [13.37,13.37,13.37,13.37,13.37];
const v67 = RegExp[65537];
v66.cbrt = 13.37;
delete (13.37)[13.37];
RegExp[3159345981] = v23;
const v69 = {POSITIVE_INFINITY:v47,trimLeft:"number",split:"number",EPSILON:-521713708,log10:v59,toExponential:RegExp,toUpperCase:13.37};
const v70 = "number"["number"];
const v71 = [1337,1337,1337,1337];
const v72 = [13.37];
const v73 = {find:v71,fill:RegExp,length:"number",acos:"number"};
const v74 = {MIN_VALUE:"number",multiline:v73};
let v75 = v71;
const v80 = [13.37,13.37,13.37,13.37,13.37];
const v82 = [1337,1337,1337,1337];
const v83 = [13.37];
const v84 = {find:v82,fill:Map,length:"number",acos:"number"};
const v85 = {MIN_VALUE:"number",multiline:v84};
let v86 = v82;
const v91 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v93 = [1337,1337,1337,1337];
const v94 = [-956001.3254401154];
const v95 = {find:v93,fill:arguments,length:"number",acos:"number"};
const v96 = {MIN_VALUE:"number",multiline:v95};
let v97 = v93;
const v100 = gc();
const v102 = -521713708 * v85;
const v103 = new Object("number","number",v96);
const v104 = Object();
const v105 = {find:v15,fill:RegExp,length:"number",acos:"number"};
const v106 = {MIN_VALUE:"number",multiline:v105};
const v109 = {MIN_VALUE:"number",multiline:-521713708};
let v115 = 0;
const v116 = v115 + 1;
v115 = v116;
v106.valueOf = RegExp;
}
%NeverOptimizeFunction(main);
main();
