function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
const v14 = [13.37,13.37,13.37,13.37,13.37];
const v16 = [1337,1337,1337,1337];
const v17 = [13.37];
const v18 = {find:v16,fill:RegExp,length:"number",acos:"number"};
const v19 = {MIN_VALUE:"number",multiline:v18};
let v20 = v16;
const v25 = [13.37,13.37,13.37,13.37,13.37];
const v27 = [1337,1337,1337,1337];
const v28 = [13.37];
const v29 = {find:v27,fill:RegExp,length:"number",acos:"number"};
const v30 = {MIN_VALUE:"number",multiline:v29};
let v32 = v27;
const v37 = [13.37,13.37,13.37,13.37,13.37];
const v38 = RegExp[65537];
v37.cbrt = 13.37;
delete (13.37)[13.37];
const v40 = "number"["number"];
const v41 = [1337,1337,1337,1337];
const v42 = [13.37];
const v43 = {find:v41,fill:RegExp,length:"number",acos:"number"};
const v44 = {MIN_VALUE:"number",multiline:v43};
let v45 = v41;
const v50 = [13.37,13.37,13.37,13.37,13.37];
const v52 = [1337,1337,1337,1337];
const v53 = [13.37];
const v54 = {find:v52,fill:Map,length:"number",acos:"number"};
const v55 = {MIN_VALUE:"number",multiline:v54};
let v56 = v52;
const v61 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v63 = [1337,1337,1337,1337];
const v64 = [-956001.3254401154];
const v65 = {find:v63,fill:arguments,length:"number",acos:"number"};
const v66 = {MIN_VALUE:"number",multiline:v65};
let v67 = v63;
const v70 = gc();
const v72 = -521713708 * v55;
const v73 = new Object("number","number",v66);
const v74 = Object();
let v75 = v6;
const v80 = [13.37,13.37,13.37,13.37,13.37];
const v82 = [1337,1337,1337,1337];
const v83 = [13.37];
const v84 = {find:v82,fill:RegExp,length:"number",acos:"number"};
const v86 = {MIN_VALUE:"number",multiline:v84};
let v87 = v82;
const v92 = [13.37,13.37,13.37,13.37,13.37];
const v94 = [1337,1337,1337,1337];
const v95 = [13.37];
const v96 = {find:v94,fill:RegExp,length:"number",acos:"number"};
const v97 = {MIN_VALUE:"number",multiline:v96};
let v98 = v94;
delete v80.deleteProperty;
const v103 = [13.37,v95,13.37,13.37,13.37];
const v105 = [1337,1337,1337,1337];
const v106 = [13.37];
const v107 = {find:v105,fill:RegExp,length:"number",acos:"number"};
const v108 = {MIN_VALUE:13.37,multiline:v107};
let v109 = v105;
const v114 = [13.37,13.37,13.37,13.37,13.37];
const v116 = [1337,1337,1337,1337];
const v117 = [13.37];
const v118 = {find:v116,fill:RegExp,length:"number",acos:"number"};
const v119 = {MIN_VALUE:"number",multiline:v118};
let v121 = v116;
const v126 = [13.37,13.37,13.37,13.37,13.37];
const v127 = RegExp[65537];
v126.cbrt = 13.37;
delete (13.37)[13.37];
RegExp[3159345981] = v83;
const v129 = {POSITIVE_INFINITY:v107,trimLeft:"number",split:"number",EPSILON:-521713708,log10:v119,toExponential:RegExp,toUpperCase:13.37};
const v130 = "number"["number"];
const v131 = [1337,1337,1337,1337];
const v132 = [13.37];
const v133 = {find:v131,fill:RegExp,length:"number",acos:"number"};
const v134 = {MIN_VALUE:"number",multiline:v133};
let v135 = v131;
const v140 = [13.37,13.37,13.37,13.37,13.37];
const v142 = [1337,1337,1337,1337];
const v143 = [13.37];
const v144 = {find:v142,fill:Map,length:"number",acos:"number"};
const v145 = {MIN_VALUE:"number",multiline:v144};
let v146 = v142;
const v151 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v153 = [1337,1337,1337,1337];
const v154 = [-956001.3254401154];
const v155 = {find:v153,fill:arguments,length:"number",acos:"number"};
const v156 = {MIN_VALUE:"number",multiline:v155};
let v157 = v153;
const v160 = gc();
const v162 = -521713708 * v145;
const v163 = new Object("number","number",v156);
const v164 = Object();
}
%NeverOptimizeFunction(main);
main();
