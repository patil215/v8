function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,RegExp,13.37,13.37];
const v20 = [1337,1337,1337,1337];
const v21 = [13.37];
const v22 = {parseInt:v20,fill:RegExp,length:"fromEntries",acos:"fromEntries"};
const v23 = {MIN_VALUE:"fromEntries",multiline:v22};
let v24 = v20;
const v29 = [13.37,13.37,13.37,13.37,13.37];
const v31 = [1337,1337,1337,1337];
const v32 = [13.37];
const v33 = {find:v31,fill:RegExp,length:"number",acos:"number"};
const v34 = {MIN_VALUE:"number",multiline:v33};
let v35 = v31;
const v40 = [13.37,13.37,13.37,13.37,13.37];
const v42 = v29 && v9;
RegExp[v31] = v10;
const v43 = [1337,1337,1337,1337];
const v44 = [13.37];
const v45 = {find:v43,fill:RegExp,length:"number",acos:"number"};
const v46 = {MIN_VALUE:"number",multiline:v45};
let v48 = v43;
const v53 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v55 = [1337,1337,1337,1337];
const v56 = [-956001.3254401154];
const v57 = {find:v55,fill:arguments,length:"number",acos:"number"};
const v58 = {MIN_VALUE:v35,multiline:v57};
let v59 = 1337;
const v61 = Object();
const v63 = Array();
}
%NeverOptimizeFunction(main);
main();
