function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,13.37,13.37,13.37];
const v16 = v9 - 1;
const v18 = [1337];
const v20 = [1337,1337,1337,1337];
const v21 = [13.37];
const v22 = {find:v20,fill:RegExp,length:"number",acos:"number"};
const v23 = {MIN_VALUE:"number",multiline:v22};
let v24 = v20;
const v29 = [13.37,13.37,13.37,13.37,13.37];
const v31 = [1337,1337,1337,1337];
const v32 = [13.37];
const v33 = {find:v31,fill:RegExp,length:"number",acos:"number"};
const v34 = {MIN_VALUE:"number",multiline:13.37};
let v35 = RegExp;
v21[-3183900290] = -521713708;
const v40 = [13.37,13.37,13.37,13.37,13.37];
const v41 = RegExp[65537];
v40.cbrt = 13.37;
delete (13.37)[13.37];
const v43 = "number"["number"];
const v44 = [1337,1337,1337,1337];
const v45 = [13.37];
const v46 = {find:v44,fill:RegExp,length:"number",acos:"number"};
const v47 = {MIN_VALUE:"number",multiline:v46};
const v48 = v29.setUint8;
let v49 = v44;
const v54 = [13.37,13.37,13.37,13.37,13.37];
const v56 = [1337,1337,1337,1337];
const v57 = [13.37];
const v58 = {find:v56,fill:Map,length:"number",acos:"number"};
const v59 = {MIN_VALUE:"number",multiline:v58};
let v60 = v56;
const v65 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v67 = [1337,1337,1337,1337];
const v68 = [-956001.3254401154];
const v69 = {find:v67,fill:arguments,length:"number",acos:"number"};
const v70 = {MIN_VALUE:"number",multiline:v69};
let v71 = v67;
}
%NeverOptimizeFunction(main);
main();
