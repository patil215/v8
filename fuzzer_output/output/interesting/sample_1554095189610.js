function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,13.37,13.37,13.37];
const v17 = [1337,1337,1337,1337];
const v18 = [13.37];
const v19 = {find:v17,fill:RegExp,length:"number",acos:"number"};
const v20 = {MIN_VALUE:"number",multiline:v19};
let v21 = v17;
const v26 = [13.37,13.37,13.37,13.37,13.37];
const v28 = [1337,1337,1337,1337];
const v29 = [13.37];
const v30 = {find:v28,fill:RegExp,length:"number",acos:"number"};
const v31 = {MIN_VALUE:"number",multiline:v30};
let v32 = v28;
const v37 = [13.37,13.37,13.37,13.37,13.37];
const v38 = RegExp[65537];
v37.cbrt = 13.37;
delete (13.37)[13.37];
const v40 = "number"["number"];
const v41 = [1337,1337,1337,1337];
const v42 = [13.37];
const v43 = {find:v41,fill:RegExp,length:"number",acos:"number"};
const v44 = {MIN_VALUE:"number",multiline:v43};
let v45 = v41;
const v50 = [13.37,13.37,13.37,13.37,13.37];
const v52 = [1337,1337,1337,1337];
const v53 = [13.37];
const v54 = {find:v52,fill:Map,length:"number",acos:"number"};
const v55 = {startsWith:"number",multiline:v54};
let v56 = v52;
const v61 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
v56 = 13.37;
const v63 = [1337,1337,1337,1337];
const v64 = [-956001.3254401154];
const v65 = {find:v63,fill:arguments,length:"number",acos:"number"};
const v66 = {MIN_VALUE:"number",multiline:v65};
let v67 = v63;
const v69 = gc();
const v71 = -521713708 * v55;
const v72 = new Object("number","number",v66);
const v73 = Object();
}
%NeverOptimizeFunction(main);
main();
