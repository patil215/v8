function main() {
const v4 = [13.37,13.37,13.37,13.37,13.37];
const v6 = [1337,1337,1337,1337];
const v7 = [13.37];
const v8 = {find:v6,fill:RegExp,length:"number",acos:"number"};
const v9 = {MIN_VALUE:"number",multiline:v8};
let v10 = v6;
const v15 = [13.37,13.37,13.37,13.37,13.37];
const v17 = [1337,1337,1337,1337];
const v18 = [13.37];
const v19 = {find:v17,fill:RegExp,length:"number",acos:"number"};
const v20 = {MIN_VALUE:"number",multiline:v19};
let v21 = v17;
const v26 = [13.37,13.37,13.37,13.37,13.37];
const v27 = RegExp[65537];
v26.cbrt = 13.37;
delete (13.37)[13.37];
const v29 = "number"["number"];
const v30 = [1337,1337,1337,1337];
const v31 = [13.37];
const v32 = {find:v30,fill:RegExp,length:"number",acos:"number"};
const v33 = {MIN_VALUE:"number",multiline:v32};
let v34 = v30;
const v38 = [13.37,13.37,13.37,13.37,13.37];
const v40 = [1337,1337,1337,1337];
const v41 = [13.37];
const v42 = {find:v40,fill:RegExp,length:"number",acos:"number"};
const v43 = {MIN_VALUE:"number",multiline:v42};
let v44 = v40;
const v49 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
const v51 = [1337,1337,1337,1337];
const v52 = [-956001.3254401154];
const v53 = {find:v51,fill:arguments,length:"number",acos:"number"};
const v54 = {MIN_VALUE:"number",multiline:v53};
let v55 = v51;
const v57 = Object();
const v59 = -521713708 * v43;
const v60 = Object("number","number",v54);
const v61 = Object();
const v62 = v43.isFrozen;
let v65 = 0;
do {
    v54.length = v65;
    const v72 = [1337,1337,1337,1337];
    const v73 = [13.37];
    const v74 = {find:v72,fill:RegExp,length:"number",acos:"number"};
    const v75 = {MIN_VALUE:"number",multiline:v74};
    let v76 = v72;
    const v81 = [13.37,13.37,13.37,13.37,13.37];
    const v82 = RegExp[65537];
    v81.cbrt = 13.37;
    delete (13.37)[13.37];
    const v84 = "number"["number"];
    const v85 = [1337,1337,1337,1337];
    const v86 = [1337];
    const v87 = {find:v85,fill:RegExp,length:"number",acos:"number"};
    const v88 = {MIN_VALUE:"number",multiline:v87};
    const v103 = [13.37,13.37,13.37,13.37,13.37];
    const v105 = [1337,1337,1337,1337];
    const v106 = [13.37];
    const v107 = {find:v105,fill:RegExp,length:"number",acos:"number"};
    const v108 = {MIN_VALUE:"number",multiline:v107};
    let v109 = v105;
    const v114 = [13.37,13.37,13.37,13.37,13.37];
    const v116 = [1337,1337,1337,1337];
    const v117 = [13.37];
    const v118 = {find:v116,fill:RegExp,length:"number",acos:"number"};
    const v119 = {MIN_VALUE:"number",multiline:v118};
    let v120 = v116;
    const v125 = [13.37,13.37,13.37,13.37,13.37];
    const v126 = RegExp[65537];
    v125.cbrt = 13.37;
    delete (13.37)[13.37];
    const v128 = "number"["number"];
    const v129 = [1337,1337,1337,1337];
    const v130 = [13.37];
    const v131 = {find:v129,fill:RegExp,length:"number",acos:"number"};
    const v132 = {MIN_VALUE:"number",multiline:v131};
    let v133 = v129;
    const v138 = [13.37,13.37,13.37,13.37,13.37];
    const v140 = [1337,1337,1337,1337];
    const v141 = [13.37];
    const v142 = {find:v140,fill:Map,length:"number",acos:"number"};
    const v143 = {MIN_VALUE:"number",multiline:v142};
    let v144 = v140;
    const v149 = [-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154,-956001.3254401154];
    const v151 = [1337,1337,1337,1337];
    const v152 = [-956001.3254401154];
    const v153 = {find:v151,fill:arguments,length:"number",acos:"number"};
    const v154 = {MIN_VALUE:"number",multiline:v153};
    let v155 = v151;
    const v157 = gc();
    const v159 = -521713708 * v143;
    const v160 = Object("number","number",v154);
    const v161 = v65 + 1;
    v65 = v161;
} while (v65 < 10);
}
%NeverOptimizeFunction(main);
main();
